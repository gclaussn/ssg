html(lang=en)
  head
    title SSG - #{title}

    meta(charset="utf-8")
    meta(name="viewport", content="width=device-width, initial-scale=1, user-scalable=no")

    link(rel="icon", href="data:,")

    link(rel="stylesheet", href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css")

  body
    include /common/header.jade

    div(class="pt-md-5 pb-md-4 text-center")
      h1(class="display-4")= title
      p(class="lead") Shows various features of SSG

    div(class="container")
      div(class="row mb-3")
        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Get page URL
            div(class="card-body")
              p Gets the URL of the page with the given ID or null, if the site has no such page.

              pre(class="p-3 bg-light") \!{_.linkPage("my-page-id")}

              p Example: Iterate a list of pages and render a link to each page
              
              p YAML:
              pre(class="p-3 bg-light").
                data:
                  pages:
                  - id: page1
                    name: Page 1
                  - id: page2
                    name: Page 2

              p JADE:
              pre(class="p-3 bg-light").
                each page in pages
                  a(href=_.linkPage(page.id))= page.name

        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Render JSON
            div(class="card-body")
              p Renders the given page data node as JSON string.

              pre(class="p-3 bg-light") \!{_.renderJson(value)}

              p
                a(href=_.linkPage("example-render-json"), target="_blank") Example
                span : Render list of numbers as JSON array and process the list
              
              p YAML:
              pre(class="p-3 bg-light").
                data:
                  numbers:
                  - 45
                  - 64
                  - 73
                  - 82

              p JADE:
              pre(class="p-3 bg-light").
                script.
                  const numbers = \!{_.renderJson(numbers)};

                  numbers.forEach(number => {
                    const odd = number % 2 == 1;
                    $("#numbers").append(`&lt;p&gt;${odd ? "Odd" : "Even"}: ${number}&lt;/p&gt;`);
                  });

        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Render Markdown
            div(class="card-body")
              p Renders the given page data node as Markdown, which converts the source into HTML.

              pre(class="p-3 bg-light") \!{_.renderMarkdown(source)}

              p
                span Example: Render a textual page data node as Markdown (see 
                a(href=_.linkPage("page-set1/2030-11-01-page1"), target="_blank") Page 1
                span  or 
                a(href=_.linkPage("page-set1/2030-11-02-page2"), target="_blank") Page 2
                span  )
              
              p YAML:
              pre(class="p-3 bg-light").
                data:
                  content: |
                    **This is bold text**

                    __This is bold text__

                    *This is italic text*

                    _This is italic text_

              p JADE:
              pre(class="p-3 bg-light").
                div \!{_.renderMarkdown(content)}

        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Page includes
            div(class="card-body")
              p.
                Page includes provide template code, mixins and / or data to page.
                Data of page includes can be accessed via dot notation - e.g.: "common.header.pages".
                Moreover the page is linked to the page includes.
                If the YAML or JADE file of a page include is modified, the page is automatically loaded and generated.

              p Example: Include src/common/header and src/common/footer
              
              p YAML:
              pre(class="p-3 bg-light").
                includes:
                - common/header
                - common/footer

              p JADE:
              pre(class="p-3 bg-light").
                body
                  include /common/header.jade

                  //- page content

                  include /common/footer.jade

        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Page metadata
            div(class="card-body")
              p Use metadata of the page itself or the metadata of selected pages (see PageSetSelector example).

              pre(class="p-3 bg-light").
                span= _id
                span= _subId
                span= _url

        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Page set selector
            div(class="card-body")
              p Selects the data of all pages, that are part of a specified page set and not rejected (by a PageFilter) nor skipped.

              p
                a(href=_.linkPage("example-page-set-selector"), target="_blank") Example
                span : Select pages of page-set1
              
              p YAML:
              pre(class="p-3 bg-light").
                dataSelectors:
                - id: selected
                  class: PageSetSelector
                  model:
                    pageSetId: page-set1

              p JADE:
              pre(class="p-3 bg-light").
                each page in selected
                  div
                    a(href= page._url) \#{page.title}

        div(class="col-6 mb-4")
          div(class="card h-100 shadow-sm")
            div(class="card-header text-center")
              h4(class="my-0 font-weight-normal") Page processor &amp; filter
            div(class="card-body")
              p.
                Page sets allow the usage of PageProcessor and PageFilter implementations.
                A page processor processes page data or metadata.
                The result of page processor is provided as page data node, having the ID of the page processor.
                A page filter filters or rejects a page based on its data or metadata.
                A rejected page can and will not be generated.

              p
                span Example: Process date (last segment of the page ID) and filter pages that are after or equal to the current date (see 
                a(href=_.linkPage("page-set1/2030-11-01-page1"), target="_blank") Page 1
                span  or 
                a(href=_.linkPage("page-set1/2030-11-02-page2"), target="_blank") Page 2
                span  )
              
              p YAML:
              pre(class="p-3 bg-light").
                processors:
                - id: date
                  class: DateProcessor
                  model:
                    dateFormat: yyyy-MM-dd
                    dateFormatLocale: en
                    timeZoneId: UTC
                filters:
                - id: date
                  class: DateFilter
                  model:
                    source: date

              p JADE:
              pre(class="p-3 bg-light").
                div \!{_.renderJson(date)}
